**Im치genes**

*1) Conceptos fundamentales de Docker: im치genes*
Las Im치genes son `Plantillas` apartir de las cuales vamos a crear contenedores nuevos.

Im치gen Una im치gen contiene distintas capas de datos (distribuci칩n, diferente software, librer칤as y personalizaci칩n). . Podemos llegar a la conslusi칩n, que una im치gen se conforma de distintas capas de personalizaci칩n, en base a una capa inicial (base image), la dicha capa, es el m치s puro estado del SO. . La siguiente ilustraci칩n nos mostrar칤a la representaci칩n gr치fica, del concepto de una im치gen en Docker.

./imagenes.webp


Si observamos, partimos desde la base del SO, y vamos agregando capas de personalizaci칩n hasta obtener la im치gen que necesitamos:

1. distribuci칩n debian
2. se agrega el editor emacs
3. se agrega el servidor Apache
4. se agregan los permisos de escritura para la carpeta /var/www de Apache
Hay que tener en cuenta, que todo parte del Kernel de Linux, en caso de utilizar alguna distrubuci칩n de Linux .

Historico de una im치gen Podemos observar la historia de nuestra im치gen, con el siguiente comando
游녤 docker history [imagen]
De esta manera podemos ver las capas de personalizaci칩n que fuer칩n agregadas, para la construcci칩n de la im치gen que conocemos.

Listar todas las imagenes que tengo localmente:
游녤 docker image ls
칩:
游녤 docker images

Descargar desde DockerHub
游녤 docker pull <image_name>:<tag_version>
Bajo la imagen de ubuntu con una versi칩n espec칤fica:
游녤 docker pull ubuntu:20.04

Para eliminar una imagen
游녤 docker image rm -f {id_image}
yo ten칤a como 15 imagenes que tenia de cosas anteriores, para borrar imagenes puedes hacer un:
游녤 docker image prune -a

*2) Construyendo una imagen propia*
$ mkdir imagenes (creo un directorio en mi m치quina) $ cd imagenes (entro al directorio) $ touch Dockerfile (creo un Dockerfile) $ code . (abro code en el direcotrio en el que estoy)

##Contenido del Dockerfile## FROM ubuntu:latest RUN touch /ust/src/hola-platzi.txt (comando a ejecutar en tiempo de build) ##fin##

$ docker build -t ubuntu:platzi . (creo una imagen con el contexto de build <directorio>) $ docker run -it ubuntu:platzi (corro el contenedor con la nueva imagen) $ docker login (me logueo en docker hub) $ docker tag ubuntu:platzi miusuario/ubuntu:platzy (cambio el tag para poder subirla a mi docker hub) $ docker push miusuario/ubuntu:platzi (publico la imagen a mi docker hub)

buenas, la linea del RUN esta mal la ruta, debe de ser /usr/src/hola-platzi.txt, gracias por el resumen


*3) Conceptos fundamentales de Docker: im치genes*



